package view;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;

import model.DAO;

public class Login extends JFrame {

	// objetos JDBC

	DAO dao = new DAO();
	private Connection con;
	private PreparedStatement pst;
	private ResultSet rs;
	// objeto tela pricipal
	Principal principal = new Principal();

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField txtLogin;
	private JPasswordField txtSenha;
	private JLabel lblStatus;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Login frame = new Login();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Login() {
		setTitle("InfoX - Login");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 201);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		lblStatus = new JLabel("");
		lblStatus.addAncestorListener(new AncestorListener() {
			public void ancestorAdded(AncestorEvent event) {
			}
			public void ancestorMoved(AncestorEvent event) {
			}
			public void ancestorRemoved(AncestorEvent event) {
			}
		});
		lblStatus.setIcon(new ImageIcon(Login.class.getResource("/img/9069340_database_fail_icon.png")));
		lblStatus.setBounds(365, 114, 48, 48);
		contentPane.add(lblStatus);

		JLabel lblLogin = new JLabel("Login:");
		lblLogin.setBounds(27, 22, 46, 14);
		contentPane.add(lblLogin);

		txtLogin = new JTextField();
		txtLogin.setBounds(110, 19, 223, 20);
		contentPane.add(txtLogin);
		txtLogin.setColumns(10);

		JLabel lblSenha = new JLabel("Senha:");
		lblSenha.setBounds(27, 62, 46, 14);
		contentPane.add(lblSenha);

		JButton btnAcessar = new JButton("");
		btnAcessar.setBorderPainted(false);
		btnAcessar.setContentAreaFilled(false);
		btnAcessar.setToolTipText("Acessar");
		btnAcessar.setIcon(new ImageIcon(Login.class.getResource("/img/9071220_enter_key_icon.png")));
		btnAcessar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {		
				logar();
			}
		});	
		btnAcessar.setBounds(365, 22, 48, 48);
		contentPane.add(btnAcessar);
		txtSenha = new JPasswordField();
		txtSenha.setBounds(110, 59, 223, 20);
		contentPane.add(txtSenha);
		
		getRootPane().setDefaultButton(btnAcessar);
		
		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setBackground(new Color(255, 128, 192));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setForeground(new Color(255, 128, 192));
		lblNewLabel.setBounds(0, 114, 434, 48);
		contentPane.add(lblNewLabel);
		
	}// Fim do construtor
	

	/**
	 * Método para autenticar um usuário
	 */

	private void logar() {

		//Criar uma variável para capturar a senha
		String capturaSenha = new String(txtSenha.getPassword()); 
		
		// validação

		if (txtLogin.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o login");
			txtLogin.requestFocus();
		} else if (capturaSenha.length() == 0) {
			JOptionPane.showMessageDialog(null, "Preencha a senha");
			txtSenha.requestFocus();
		} else {

			// Lógica pricipal
			String read = "select * from usuarios where login=? and Senha=md5(?)";
			try {
				con = dao.conectar();
				pst = con.prepareStatement(read);
				pst.setString(1, txtLogin.getText());
				pst.setString(2, capturaSenha);
				rs = pst.executeQuery();
				if (rs.next()) {
					// logar -> acessar a tela principal
					principal.setVisible(true);
					//fechar a tela de login(está tela)
					this.dispose();
										
				}else {
					JOptionPane.showMessageDialog(null, "Usuário e/ou senha invalido(s)");
				}
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
			status();
		}
		}
	
		private void status() {
			try {
				//abrir a conexão 
				con = dao.conectar();
				if (con == null) {
					//System.out.println("Erro de conexão");
					lblStatus.setIcon(new ImageIcon(Usuarios.class.getResource("/img/dboff.png")));
				} else {
					//System.out.println("Banco conectado");
					lblStatus.setIcon(new ImageIcon(Usuarios.class.getResource("/img/9069499_database_success_icon.png")));
				}
				// NUNCA esquecer de fechar a conexão 
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
			
		}//Fim do método status()
	

}// Fim do código
