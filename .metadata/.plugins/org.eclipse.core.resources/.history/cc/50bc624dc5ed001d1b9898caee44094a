package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import model.DAO;
import utils.Validador;

public class Usuarios extends JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private JTextField txtID;
	private JTextField txtNome;
	private JTextField txtLogin;
	private PreparedStatement pst;
	private ResultSet rs;
	private Connection con;
	//Instanciar objetos JDBC
	DAO dao = new DAO();
	private JPasswordField txtSenha;
	private JButton btnAdicionar;
	private JButton btnEditar;
	private JButton btnExcluir;
	private JButton btnPesquisar;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			Usuarios dialog = new Usuarios();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public Usuarios() {
		setIconImage(Toolkit.getDefaultToolkit().getImage(Usuarios.class.getResource("/img/users.png")));
		setTitle("Usuarios");
		setBounds(100, 100, 450, 300);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setForeground(new Color(255, 255, 255));
		contentPanel.setBorder(null);
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("ID:");
		lblNewLabel.setBounds(10, 27, 46, 14);
		contentPanel.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Nome:");
		lblNewLabel_1.setBounds(10, 58, 46, 14);
		contentPanel.add(lblNewLabel_1);
		
		JLabel lblNewLabel_2 = new JLabel("Login:");
		lblNewLabel_2.setBounds(10, 90, 46, 14);
		contentPanel.add(lblNewLabel_2);
		
		JLabel lblSenha = new JLabel("Senha:");
		lblSenha.setBounds(10, 121, 46, 14);
		contentPanel.add(lblSenha);
		
		txtID = new JTextField();
		txtID.setEditable(false);
		txtID.setBounds(66, 24, 86, 20);
		contentPanel.add(txtID);
		txtID.setColumns(10);
		
		txtNome = new JTextField();
		txtNome.setBounds(66, 55, 177, 20);
		contentPanel.add(txtNome);
		txtNome.setColumns(10);
		txtNome.setDocument(new Validador (50));
		
		txtLogin = new JTextField();
		txtLogin.setBounds(66, 87, 177, 20);
		contentPanel.add(txtLogin);
		txtLogin.setColumns(10);
		//uso do validador para limitar o número de caracteres 
		txtLogin.setDocument(new Validador (15));
		
		btnPesquisar = new JButton("");
		btnPesquisar.setContentAreaFilled(false);
		btnPesquisar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				buscar();
			}
		});
		btnPesquisar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnPesquisar.setBorder(null);
		btnPesquisar.setIcon(new ImageIcon(Usuarios.class.getResource("/img/pesquisar.png")));
		btnPesquisar.setToolTipText("Pesquisar");
		btnPesquisar.setBounds(253, 73, 48, 48);
		contentPanel.add(btnPesquisar);
		
		JButton btnNewButton_1 = new JButton("");
		btnNewButton_1.setBorderPainted(false);
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				limparcampos();
			}
		});
		btnNewButton_1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnNewButton_1.setBorder(null);
		btnNewButton_1.setIcon(new ImageIcon(Usuarios.class.getResource("/img/8686254_ic_fluent_text_clear_formatting_icon.png")));
		btnNewButton_1.setToolTipText("Apagar");
		btnNewButton_1.setBounds(30, 177, 48, 48);
		contentPanel.add(btnNewButton_1);
		
		getRootPane().setDefaultButton(btnPesquisar);
		
		txtSenha = new JPasswordField();
		txtSenha.setBounds(66, 118, 177, 20);
		contentPanel.add(txtSenha);
		//uso do validador para limitar o número de caracteres 
		txtSenha.setDocument(new Validador (8));
		
		btnAdicionar = new JButton("");
		btnAdicionar.setEnabled(false);
		btnAdicionar.setBorderPainted(false);
		btnAdicionar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adicionar();
			}
		});
		btnAdicionar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnAdicionar.setBorder(null);
		btnAdicionar.setIcon(new ImageIcon(Usuarios.class.getResource("/img/adicionar.png")));
		btnAdicionar.setBounds(181, 172, 62, 62);
		contentPanel.add(btnAdicionar);
		
		btnEditar = new JButton("");
		btnEditar.setEnabled(false);
		btnEditar.setBorderPainted(false);
		btnEditar.setBorder(null);
		btnEditar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnEditar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				editarContato();
			}
		});
		btnEditar.setIcon(new ImageIcon(Usuarios.class.getResource("/img/editar.png")));
		btnEditar.setToolTipText("Editar");
		btnEditar.setBounds(253, 175, 60, 59);
		contentPanel.add(btnEditar);
		
		btnExcluir = new JButton("");
		btnExcluir.setEnabled(false);
		btnExcluir.setBorder(null);
		btnExcluir.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				excluirUsuarios();
			}
		});
		btnExcluir.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnExcluir.setBorderPainted(false);
		btnExcluir.setIcon(new ImageIcon(Usuarios.class.getResource("/img/excluir.png")));
		btnExcluir.setToolTipText("Excluir");
		btnExcluir.setBounds(105, 172, 64, 64);
		contentPanel.add(btnExcluir);
	}
	private void buscar() {
		//Dica - testar o evento preimeiro
		//System.out.println("teste do botão buscar");
		// Criar ua variável com a query (instruções do banco)
		String read = "select * from usuarios where login = ?";
		//Tratamento de exceções 
		try {
			//Abrir a conexão 
			con = dao.conectar();
			
			//Preparar a exucução da query(instrução sql - CRUD Read)
			//O paraêmtro 1 substitui a ? pelo conteúdo da caixa de texto
			pst = con.prepareStatement(read);
			pst.setString(1, txtLogin.getText());
			//executar a query e buscar o resultado
			rs = pst.executeQuery();
			//uso da estrutura if else parar verificar se existe o contato
			//rs.next() -> se existir um contato no banco
			if (rs.next()) {
				txtID.setText(rs.getString(1)); //1 campo da tabela 
				txtNome.setText(rs.getString(2)); //3 campo (Login)
				txtSenha.setText(rs.getString(4)); //4 campo (Senha)
				//validação (liberação dos botões alterar e excluir)
				btnEditar.setEnabled(true);
				btnExcluir.setEnabled(true);
				btnPesquisar.setEnabled(false);
						
			} else {
				
				//se não existir um contato no banco 
				JOptionPane.showMessageDialog(null, "Usuarío Inexistente");
				btnAdicionar.setEnabled(true);
				btnPesquisar.setEnabled(false);
				limparcampos();
				
			}
			
		}catch (Exception e) {
			System.out.print(e);
		}
	}

	/**
	 * Limpar campos 
	 */
	private void limparcampos() {
		txtID.setText(null);
		txtNome.setText(null);
		txtSenha.setText(null);
		txtLogin.setText(null);
		btnAdicionar.setEnabled(false);
		btnEditar.setEnabled(false);
		btnExcluir.setEnabled(false);
		btnPesquisar.setEnabled(true);
			}//fim do método limpar campos()
	
	@SuppressWarnings("deprecation")
	private void adicionar() {
		// System.out.println("teste");
		// Validação de campos obrigatóriios
		if (txtNome.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o nome do Usuário");
			txtNome.requestFocus();
		} else if (txtLogin.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Login do Usuário");
			txtLogin.requestFocus();
		}else if (txtSenha.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Senha do Usuário");
			txtSenha.requestFocus();
		} else {
			
			// lógica pricipal
			// CRUD Creat
			String create = "insert into usuarios (nome,login,senha) values (?,?,?)";
			// tratamento com exceções
			try {
				//abrir conexão 
				con = dao.conectar();
				//preparar a execução da query(instrução sql - CRUD Create)
				pst = con.prepareStatement(create);
				pst.setString(1, txtNome.getText());
				pst.setString(2, txtLogin.getText());
				pst.setString(3, txtSenha.getText());
				//executar a query(instruição sql (CRUD - Creat))
				pst.executeUpdate();
				//Confirmar
				JOptionPane.showMessageDialog(null, "Usuário adicionado");
				//limpar campos
				limparcampos();
				//fechar a conexão
				
			} catch (Exception e) {
				System.out.println(e);
			}
			}
							
			}
			private void editarContato() {
				// System.out.println("teste do Método");

				// Validação dos campos obrigátorios
				if (txtNome.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Digite o nome");
					txtNome.requestFocus();
				} else if (txtLogin.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Digite o login do Usuário");
					txtLogin.requestFocus();
				} else if (txtSenha.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Digite a Senha do Usuário");
					txtSenha.requestFocus();
				}else {
				
					
					
					// Lógica principal
					// CRUD - Update
					String update = "update usuarios set nome=?, login=?, senha=? where id=?";
					// tratamentos de exceçoes
					try {

						// como a conexão
						con = dao.conectar();
						// preparar a query (instrução sql)
						pst = con.prepareStatement(update);
						pst.setString(1, txtNome.getText());
						pst.setString(2, txtLogin.getText());
						pst.setString(3, txtSenha.getText());
						pst.setString(4, txtID.getText());
						// executar a query
						pst.executeUpdate();
						// confirmar para o usuário
						JOptionPane.showMessageDialog(null, "Dados do Usuário editados com sucesso");
						// limpar campos
						limparcampos();
						// fechar conexão
						con.close();

					} catch (Exception e) {
						System.out.println(e);
					}
				}
		}
				// Método usado para excluir um contato

				private void excluirUsuarios() {
					// System.out.println("Teste do botão excluir");
					// validação de exclusão - a variável confima captura a opção escolhida

					int confirma = JOptionPane.showConfirmDialog(null, "Confirma a exclusão deste usuarios ?", "Atenção !",
							JOptionPane.YES_NO_OPTION);
					if (confirma == JOptionPane.YES_NO_OPTION) {
						//CRUD - Delete
						String delete = "delete from usuarios where id=?";
						//tratamento de exceções
						try {
							//abrir a conexão 
							con = dao.conectar();
							//preparar a query (instrução sql)
							pst = con.prepareStatement(delete);
							//substituir a ? pelo id do contato
							pst.setString(1, txtID.getText());
							//executar a query
							pst.executeUpdate();
							//limpar Campos
							limparcampos();
							//exibir uma mensagem ao usuário
							JOptionPane.showMessageDialog(null, " usuario excluido");
							//fechar a conexão 
							con.close();
						} catch (Exception e) {
							System.out.println(e);
}
}
}
}